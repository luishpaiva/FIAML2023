# -*- coding: utf-8 -*-
"""EngAtributos.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1fYmgYbWrP-TpXntEoPHxQKSFd_uvrnTj
"""

import pandas as pd
from sklearn.preprocessing import LabelEncoder, StandardScaler

dataset = pd.read_csv('credit_simple.csv', sep = ';')
dataset.shape

dataset.head()

y = dataset['CLASSE']
X = dataset.iloc[:,:-1]

X.isnull().sum()

mediana = X['SALDO_ATUAL'].median()
mediana

# atualizando os valores nulos da coluna 'SALDO_ATUAL' com a mediana (valores numéricos)
X['SALDO_ATUAL'].fillna(mediana, inplace = True)
X.isnull().sum()

agrupado = X.groupby(['ESTADOCIVIL']).size()
agrupado

# atualizando os valores nulos da coluna 'ESTADOCIVIL' com a moda (valores categóricos)
X['ESTADOCIVIL'].fillna('masculino solteiro', inplace = True)
X.isnull().sum()

desv = X['SALDO_ATUAL'].std()
desv

X.loc[X['SALDO_ATUAL'] >= 2 * desv, 'SALDO_ATUAL']

mediana = X['SALDO_ATUAL'].median()
mediana

X.loc[X['SALDO_ATUAL'] >= 2 * desv, 'SALDO_ATUAL'] = mediana
X.loc[X['SALDO_ATUAL'] >= 2 * desv]

agrupado = X.groupby(['PROPOSITO']).size()
agrupado

X.loc[X['PROPOSITO'] == 'Eletrodomésticos', 'PROPOSITO'] = 'outros'
X.loc[X['PROPOSITO'] == 'qualificação', 'PROPOSITO'] = 'outros'
agrupado = X.groupby(['PROPOSITO']).size()
agrupado

X['DATA']

X['DATA'] = pd.to_datetime(X['DATA'], format = '%d/%m/%Y')

X['DATA']

X['ANO'] = X['DATA'].dt.year
X['MES'] = X['DATA'].dt.month
X['DIASEMANA'] = X['DATA'].dt.day_name()

X[['ANO', 'MES', 'DIASEMANA']]

X['ESTADOCIVIL'].unique()

X['PROPOSITO'].unique()

X['DIASEMANA'].unique()

labelencoder1 = LabelEncoder()
X['ESTADOCIVIL'] = labelencoder1.fit_transform(X['ESTADOCIVIL'])
X['PROPOSITO'] = labelencoder1.fit_transform(X['PROPOSITO'])
X['DIASEMAN'] = labelencoder1.fit_transform(X['DIASEMANA'])

X.head()

outros = X['OUTROSPLANOSPGTO'].unique()
outros

z = pd.get_dummies(X['OUTROSPLANOSPGTO'], prefix = 'OUTROS')
z

sc = StandardScaler()
m = sc.fit_transform(X.iloc[:,0:3])
m

X = pd.concat([X, z, pd.DataFrame(m, columns = ['SALDO_ATUAL_N', 'RESIDENCIADESDE_N', 'IDADE_N'])], axis = 1)

X.head()

X.drop(columns = ['SALDO_ATUAL', 'RESIDENCIADESDE', 'OUTROSPLANOSPGTO', 'DATA', 'OUTROS_banco'], inplace = True)

X
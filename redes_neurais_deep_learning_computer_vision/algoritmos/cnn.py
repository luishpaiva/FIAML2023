# -*- coding: utf-8 -*-
"""CNN.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1inoJRHGvv_TiuFGLEO9ZKn2naasPR7X8
"""

import numpy as np
from keras.datasets import cifar10
from keras.utils import to_categorical
from keras.models import Sequential
from keras.layers import Dense, Dropout, Flatten, Conv2D, MaxPooling2D
import matplotlib.pyplot as plt
from sklearn.metrics import confusion_matrix, accuracy_score

(X_train, y_train), (X_test, y_test) = cifar10.load_data()

image = X_train[1]
plt.imshow(image, interpolation = 'bicubic')
plt.show()

y_train

X_train.shape

X_train = X_train.astype('float32') / 255.0
X_test = X_test.astype('float32') / 255.0

y_train = to_categorical(y_train, 10)
y_test = to_categorical(y_test, 10)

y_train

modelo = Sequential()

modelo.add(Conv2D(32, (3, 3), padding = 'same', activation = 'relu', input_shape = (32, 32, 3)))
modelo.add(Conv2D(32, (3, 3), activation = 'relu'))
modelo.add(MaxPooling2D(pool_size = (2, 2)))
modelo.add(Dropout(0.25))

modelo.add(Conv2D(64, (3, 3), padding = 'same', activation = 'relu'))
modelo.add(Conv2D(64, (3, 3), activation = 'relu'))
modelo.add(MaxPooling2D(pool_size = (2, 2)))
modelo.add(Dropout(0.25))

modelo.add(Flatten())
modelo.add(Dense(512, activation = 'relu'))
modelo.add(Dropout(0.25))
modelo.add(Dense(10, activation = 'softmax'))

modelo.compile(loss = 'categorical_crossentropy', optimizer = 'adam', metrics = ['accuracy'])
modelo.fit(X_train, y_train, batch_size = 32, epochs = 100)

previsoes = modelo.predict(X_test)

previsoes

previsoes_classes = np.argmax(previsoes, axis = 1)
previsoes_classes

y_test_classes = np.argmax(y_test, axis = 1)

y_test_classes

accuracy = accuracy_score(y_test_classes, previsoes_classes)
accuracy

confusion = confusion_matrix(y_test_classes, previsoes_classes)

confusion